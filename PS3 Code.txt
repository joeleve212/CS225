;QUESTION 10:

(defun listofnums (x)
  (if (not (eql x 1)) 
    (listofnums (- x 1)) () )
  (format t "~A " x)
  )
(write-line "Input a number: ")
(listofnums (read))

;Question 11 version 1:

(defun removemultiples (k nlist)
    (format t "Inputs: ~A ~A ~%" k nlist)
    (remove k nlist)
    (loop for i in nlist do(
        if (eql 0 (mod i k));test
            (setf nlist (remove i nlist));then
            (format t "~A is not a multiple of ~A~%" i k);else
        )
    )
    (format t "~%New list: ~A" nlist)
)
;Version 2:
(defun removemultiples (k nlist)
    (loop for num in nlist
        do (
        if (eql (mod num k) 0)
            (setf nlist (remove num nlist))
            (format t "No change")
        )
        ; (return '(1 3))
        (print nlist)
    )
    (return nlist)
)

(format t "~A" (removemultiples 5 '(10 3 5 10 30 46)))



;Full Version of Q10 & Q11 together :

(defun removemultiples (k nlist)
    (format t "Inputs: ~A ~A ~%" k nlist)
    (loop for i in nlist do(
        if (eql 0 (mod i k));test
            (setf nlist (remove i nlist));then
            (format t "~A is not a multiple of ~A~%" i k);else
        )
    )
    (setf nlist nlist)
)

(defun listofnums (x)
    (setq numList nil)
    (loop
        (setq numList (cons x numList))
        (setf x (- x 1))
        (when (< x 1) (return numList))
    )
)

(format t "New List: ~A" (removemultiples 3 (listofnums 6)))



; Question 12:

(defun sieve (n) 
    (setq primes nil)
    (setq x 1)

    (loop
        (setq flag 7); 7 = prime, 4 = non-prime (0 and 1 are boring)
        (loop for y from 2 to (/ x 2) do (
            if (= (mod x y) 0) 
                (setq flag 4)
            )
        )
        (if (= flag 7)
            (setq primes (cons x primes))
            (setq flag 7)
            )
        
        (setf x (+ x 1))
        (when (> x n) (return primes))
    )
)
 (format t "~A" (sieve 62))